{"version":3,"sources":["components/alert/AlertPop.js","context/AuthContext.js","components/addRecord/AddRecord.js","pages/add/Add.js","components/createUser/CreateUser.js","components/updateUser/UpdateUser.js","pages/create/Create.js","components/popUp/ModalDelete.js","components/popUp/ModalUpdate.js","components/popUp/PopUp.js","components/viewData/ViewData.js","pages/view/View.js","pages/home/Home.js","components/navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","width","AlertPop","props","classes","pop","className","style","Alert","severity","color","success","failure","AuthContext","createContext","userIs","isLoggedIn","login","logout","AddRecord","auth","useContext","useState","order","setOrder","transaction","setTransaction","amount","setAmount","resp","setResp","console","log","handleSubmit","evt","a","preventDefault","axios","post","username","ordernumber","transactionID","response","data","SubmitButton","trim","Button","variant","onClick","disabled","Container","fixed","justifyContent","alignItems","display","Grid","item","md","lg","Paper","elevation","Typography","textAlign","background","padding","flexDirection","TextField","marginBottom","id","label","fullWidth","value","autoComplete","onChange","e","target","type","Add","CreateUser","userName","setUserName","password","setPassword","access","setAccess","showPassword","values","setValues","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","Select","labelId","MenuItem","UpdateUser","patch","Create","height","ModalDelete","ModalUpdate","PopUp","modal","setModal","top","transform","backgroundColor","close","fetchData","dataReload","loader","table","button","flexShrink","marginLeft","ViewData","setData","loading","setLoading","popUp","setPopUp","page","setPage","rowsPerPage","setRowsPerPage","toSearch","setToSearch","refresh","get","length","useEffect","useTheme","startIcon","CircularProgress","disableShrink","TableContainer","component","textDecoration","doc","jsPDF","setFontSize","content","startY","head","body","map","elt","Date","TimeStamp","toDateString","ord_number","trans_id","Amount","text","autoTable","save","filename","sheet","buttonText","Table","TableHead","TableRow","TableCell","align","TableBody","filter","datas","toLowerCase","includes","toString","slice","row","key","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","SelectProps","inputProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","overflow","zIndex","View","Home","setUserIs","msg","flexGrow","title","link","Navigation","AppBar","marginRight","exact","to","activeClassName","App","SetIsLoggedIn","routes","useCallback","path","Provider","basename","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.807f996b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  IconButton,\r\n  Collapse,\r\n} from \"@material-ui/core/\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nfunction AlertPop(props) {\r\n  const classes = useStyles();\r\n  if (props.pop === true) {\r\n    return (\r\n      <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n        <Alert severity=\"success\" color=\"success\">\r\n          {props.success}\r\n        </Alert>\r\n      </div>\r\n    );\r\n  } else if (props.pop === false) {\r\n    return (\r\n      <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n        <Alert severity=\"error\" color=\"error\">\r\n          {props.failure}\r\n        </Alert>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AlertPop;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  userIs: \"\",\r\n  //change in production\r\n  isLoggedIn: false,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./AddRecord.css\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../alert/AlertPop\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core/\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nfunction AddRecord() {\r\n  const auth = useContext(AuthContext);\r\n  // const [userName, setUserName] = useState(auth.userIs);\r\n  const [order, setOrder] = useState(\"\");\r\n  const [transaction, setTransaction] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [resp, setResp] = useState(\"\");\r\n  console.log(auth);\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    // alert(`Submitting : ${order},${transaction},${amount}`);\r\n    const response = await axios.post(\r\n      \"http://34.122.82.176:3000/post/addRecord\",\r\n      {\r\n        username: auth.userIs,\r\n        ordernumber: order,\r\n        transactionID: transaction,\r\n        amount: amount,\r\n      }\r\n    );\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n  };\r\n  console.log(auth);\r\n  const alertMessage = () => {\r\n    if (resp === `record with same order number : '${order}'`) {\r\n      return false;\r\n    } else if (resp === \"successfully updated\") {\r\n      return true;\r\n    }\r\n  };\r\n  const SubmitButton = () => {\r\n    if (order.trim() && transaction.trim() && amount.trim()) {\r\n      return (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={handleSubmit}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ margin: \"1.5rem\" }}>\r\n      <Container\r\n        fixed\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Grid item md={6} lg={6}>\r\n          <Paper elevation={3}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                background: \"#3f51b5\",\r\n                color: \"white\",\r\n                padding: \"0.6rem\",\r\n              }}\r\n            >\r\n              RECORD NEW ENTRY\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                padding: \"1rem\",\r\n              }}\r\n            >\r\n              <TextField\r\n                disabled\r\n                style={{ marginBottom: \"0.8rem\" }}\r\n                id=\"standard\"\r\n                label=\"Username\"\r\n                fullWidth={true}\r\n                value={auth.userIs}\r\n                autoComplete=\"off\"\r\n              />\r\n              <TextField\r\n                style={{ marginBottom: \"0.8rem\" }}\r\n                id=\"standard\"\r\n                label=\"Transaction ID\"\r\n                fullWidth=\"True\"\r\n                onChange={(e) => setTransaction(e.target.value)}\r\n                autoComplete=\"off\"\r\n              />\r\n              <TextField\r\n                style={{ marginBottom: \"0.8rem\" }}\r\n                id=\"standard\"\r\n                label=\"Order Number\"\r\n                fullWidth=\"True\"\r\n                onChange={(e) => setOrder(e.target.value)}\r\n                autoComplete=\"off\"\r\n                type=\"number\"\r\n              />\r\n              <TextField\r\n                style={{ marginBottom: \"0.8rem\" }}\r\n                id=\"standard\"\r\n                label=\"Amount\"\r\n                fullWidth=\"True\"\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                autoComplete=\"off\"\r\n              />\r\n              <AlertPop\r\n                pop={alertMessage()}\r\n                success=\"Record updated.\"\r\n                failure=\"Record exists with same transaction number.\"\r\n              />\r\n              <SubmitButton />\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddRecord;\r\n","import React from \"react\";\r\nimport AddRecord from \"../../components/addRecord/AddRecord\";\r\n\r\nfunction Add() {\r\n  return (\r\n    <div>\r\n      <AddRecord />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  IconButton,\r\n  Collapse,\r\n  Container,\r\n  Input,\r\n  InputAdornment,\r\n} from \"@material-ui/core/\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../alert/AlertPop\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nfunction CreateUser() {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [access, setAccess] = useState(\"\");\r\n  const [resp, setResp] = useState(\"\");\r\n  const [values, setValues] = useState({ showPassword: false });\r\n\r\n  // const [open, setOpen] = useState(false);\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    // alert(`Submitting : ${userName},${password},${access}`);\r\n    const response = await axios.post(\r\n      \"http://34.122.82.176:3000/post/addUser\",\r\n      {\r\n        username: userName,\r\n        password: password,\r\n        access: access,\r\n      }\r\n    );\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n    // setOpen(!open);\r\n  };\r\n  const alertMessage = () => {\r\n    if (resp === \"user already exists\") {\r\n      return false;\r\n    } else if (resp === \"successfully updated\") {\r\n      return true;\r\n    }\r\n  };\r\n  // const AlertBadge = () => {\r\n  //   if (resp === \"user already exists\") {\r\n  //     return (\r\n  //       <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n  //         <Collapse in={open}>\r\n  //           <Alert\r\n  //             action={\r\n  //               <IconButton\r\n  //                 aria-label=\"close\"\r\n  //                 color=\"inherit\"\r\n  //                 size=\"small\"\r\n  //                 onClick={() => {\r\n  //                   setOpen(false);\r\n  //                 }}\r\n  //               >\r\n  //                 <CloseIcon fontSize=\"inherit\" />\r\n  //               </IconButton>\r\n  //             }\r\n  //             severity=\"error\"\r\n  //           >\r\n  //             User already exist.\r\n  //           </Alert>\r\n  //         </Collapse>\r\n  //       </div>\r\n  //     );\r\n  //   } else if (resp === \"successfully updated\") {\r\n  //     return (\r\n  //       <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n  //         <Collapse in={open}>\r\n  //           <Alert\r\n  //             action={\r\n  //               <IconButton\r\n  //                 aria-label=\"close\"\r\n  //                 color=\"inherit\"\r\n  //                 size=\"small\"\r\n  //                 onClick={() => {\r\n  //                   setOpen(false);\r\n  //                 }}\r\n  //               >\r\n  //                 <CloseIcon fontSize=\"inherit\" />\r\n  //               </IconButton>\r\n  //             }\r\n  //             severity=\"success\"\r\n  //           >\r\n  //             User Created.\r\n  //           </Alert>\r\n  //         </Collapse>\r\n  //       </div>\r\n  //     );\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  const SubmitButton = () => {\r\n    if (userName.trim() && password.trim() && access.trim()) {\r\n      return (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={handleSubmit}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <Grid style={{ width: \"100%\", margin: \"2%\" }}>\r\n      <Paper elevation={3}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            background: \"#3f51b5\",\r\n            color: \"white\",\r\n            padding: \"0.6rem\",\r\n          }}\r\n        >\r\n          CREATE NEW USER\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Username\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          {/* <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"off\"\r\n          /> */}\r\n          <FormControl style={{ width: \"100%\" }}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={\r\n                (handleChange(\"password\"), (e) => setPassword(e.target.value))\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Access</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={access}\r\n              onChange={(e) => setAccess(e.target.value)}\r\n              fullWidth=\"True\"\r\n            >\r\n              <MenuItem value={\"limited\"}>Limited</MenuItem>\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <AlertPop\r\n            pop={alertMessage()}\r\n            success=\"User created.\"\r\n            failure=\"User already exist.\"\r\n          />\r\n          <SubmitButton />\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  IconButton,\r\n  Collapse,\r\n  Container,\r\n  Input,\r\n  InputAdornment,\r\n} from \"@material-ui/core/\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../alert/AlertPop\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nfunction UpdateUser() {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [access, setAccess] = useState(\"\");\r\n  const [values, setValues] = useState({ showPassword: false });\r\n  // const [open, setOpen] = useState(false);\r\n  const [resp, setResp] = useState(\"\");\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    // alert(`Submitting : ${userName},${password},${access}`);\r\n    const response = await axios.patch(\r\n      \"http://34.122.82.176:3000/post/modifyUser\",\r\n      {\r\n        username: userName,\r\n        password: password,\r\n        access: access,\r\n      }\r\n    );\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n    // setOpen(!open);\r\n  };\r\n  const alertMessage = () => {\r\n    if (resp === \"user already exists\") {\r\n      return false;\r\n    } else if (resp === \"successfully updated\") {\r\n      return true;\r\n    }\r\n  };\r\n  // const AlertBadge = () => {\r\n  //   if (resp === \"user already exists\") {\r\n  //     return (\r\n  //       <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n  //         <Collapse in={open}>\r\n  //           <Alert\r\n  //             action={\r\n  //               <IconButton\r\n  //                 aria-label=\"close\"\r\n  //                 color=\"inherit\"\r\n  //                 size=\"small\"\r\n  //                 onClick={() => {\r\n  //                   setOpen(false);\r\n  //                 }}\r\n  //               >\r\n  //                 <CloseIcon fontSize=\"inherit\" />\r\n  //               </IconButton>\r\n  //             }\r\n  //             severity=\"error\"\r\n  //           >\r\n  //             User doesn't exist.\r\n  //           </Alert>\r\n  //         </Collapse>\r\n  //       </div>\r\n  //     );\r\n  //   } else if (resp === \"successfully updated\") {\r\n  //     return (\r\n  //       <div className={classes.root} style={{ margin: \"1rem\" }}>\r\n  //         <Collapse in={open}>\r\n  //           <Alert\r\n  //             action={\r\n  //               <IconButton\r\n  //                 aria-label=\"close\"\r\n  //                 color=\"inherit\"\r\n  //                 size=\"small\"\r\n  //                 onClick={() => {\r\n  //                   setOpen(false);\r\n  //                 }}\r\n  //               >\r\n  //                 <CloseIcon fontSize=\"inherit\" />\r\n  //               </IconButton>\r\n  //             }\r\n  //             severity=\"success\"\r\n  //           >\r\n  //             User Updated.\r\n  //           </Alert>\r\n  //         </Collapse>\r\n  //       </div>\r\n  //     );\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n  const SubmitButton = () => {\r\n    if (userName.trim() && password.trim() && access.trim()) {\r\n      return (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={handleSubmit}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <Grid style={{ width: \"100%\", margin: \"2%\" }}>\r\n      <Paper elevation={3}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            background: \"#3f51b5\",\r\n            color: \"white\",\r\n            padding: \"0.6rem\",\r\n          }}\r\n        >\r\n          UPDATE USER\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Username\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          {/* <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"off\"\r\n          /> */}\r\n          <FormControl style={{ width: \"100%\" }}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={\r\n                (handleChange(\"password\"), (e) => setPassword(e.target.value))\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Access</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={access}\r\n              onChange={(e) => setAccess(e.target.value)}\r\n              fullWidth=\"True\"\r\n            >\r\n              <MenuItem value={\"limited\"}>Limited</MenuItem>\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          {/* <AlertBadge /> */}\r\n          <AlertPop\r\n            pop={alertMessage()}\r\n            success=\"User updated.\"\r\n            failure=\"User doesn't exist.\"\r\n          />\r\n          <SubmitButton />\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default UpdateUser;\r\n","import React from \"react\";\r\nimport CreateUser from \"../../components/createUser/CreateUser\";\r\nimport UpdateUser from \"../../components/updateUser/UpdateUser\";\r\nimport { Container } from \"@material-ui/core/\";\r\nfunction Create() {\r\n  return (\r\n    <div>\r\n      <Container\r\n        fixed\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          height: \"80vh\",\r\n        }}\r\n      >\r\n        <CreateUser style={{ width: \"46%\" }} />\r\n        <UpdateUser style={{ width: \"46%\" }} />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useState } from \"react\";\r\nimport { Paper, Grid, TextField, Button } from \"@material-ui/core/\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../alert/AlertPop\";\r\n\r\nfunction ModalDelete(props) {\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [resp, setResp] = useState(\"\");\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const response = await axios({\r\n      method: \"delete\",\r\n      url: \"http://34.122.82.176:3000/post/deleteRecord\",\r\n      data: {\r\n        transactionID: transactionId,\r\n      },\r\n    });\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n    console.log(transactionId);\r\n    console.log(response);\r\n  };\r\n  const alertMessage = () => {\r\n    if (resp === \"record does not exists\") {\r\n      return false;\r\n    } else if (resp === \"successfully updated\") {\r\n      return true;\r\n    }\r\n  };\r\n  const SubmitButton = () => {\r\n    if (transactionId.trim()) {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n            props.fetchData();\r\n            props.loader();\r\n          }}\r\n        >\r\n          DELETE\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n            props.fetchData();\r\n            props.loader();\r\n          }}\r\n        >\r\n          DELETE\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    // <div style={{ margin: \"1.5rem\" }}>\r\n    //   <Container\r\n    //     fixed\r\n    //     style={{\r\n    //       justifyContent: \"center\",\r\n    //       alignItems: \"center\",\r\n    //       display: \"flex\",\r\n    //     }}\r\n    //   >\r\n    <Grid style={{ width: \"100%\", margin: \"2%\" }}>\r\n      <Paper elevation={3}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Transaction ID\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setTransactionId(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <AlertPop\r\n            pop={alertMessage()}\r\n            success=\"Record deleted.\"\r\n            failure=\"Record doesn't exist.\"\r\n          />\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <SubmitButton />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.close}>\r\n              CLOSE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n    //   </Container>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default ModalDelete;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Paper, Grid, TextField, Button } from \"@material-ui/core/\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../alert/AlertPop\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nfunction ModalUpdate(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [order, setOrder] = useState(\"\");\r\n  const [transaction, setTransaction] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [resp, setResp] = useState(\"\");\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    // alert(`Submitting : ${order},${transaction},${amount}`);\r\n    const response = await axios.patch(\r\n      \"http://34.122.82.176:3000/post/updateRecord\",\r\n      {\r\n        username: auth.userIs,\r\n        ordernumber: order,\r\n        transactionID: transaction,\r\n        amount: amount,\r\n      }\r\n    );\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n  };\r\n  const alertMessage = () => {\r\n    if (resp === \"record does not exists\") {\r\n      return false;\r\n    } else if (resp === \"successfully updated\") {\r\n      return true;\r\n    }\r\n  };\r\n  const SubmitButton = () => {\r\n    if (order.trim() && transaction.trim() && amount.trim()) {\r\n      return (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          UPDATE\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={handleSubmit}\r\n        >\r\n          UPDATE\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    // <div style={{ margin: \"1.5rem\" }}>\r\n    //   <Container\r\n    //     fixed\r\n    //     style={{\r\n    //       justifyContent: \"center\",\r\n    //       alignItems: \"center\",\r\n    //       display: \"flex\",\r\n    //       width: \"100%\",\r\n    //     }}\r\n    //   >\r\n    <Grid style={{ width: \"100%\", margin: \"2%\" }}>\r\n      <Paper elevation={3}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          <TextField\r\n            disabled\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Username\"\r\n            fullWidth=\"True\"\r\n            value={auth.userIs}\r\n            autoComplete=\"off\"\r\n          />\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Transaction ID\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setTransaction(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Order Number\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setOrder(e.target.value)}\r\n            autoComplete=\"off\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <TextField\r\n            style={{ marginBottom: \"0.8rem\" }}\r\n            id=\"standard\"\r\n            label=\"Amount\"\r\n            fullWidth=\"True\"\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <AlertPop\r\n            pop={alertMessage()}\r\n            success=\"Record updated.\"\r\n            failure=\"Record doesn't exist.\"\r\n          />\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <SubmitButton />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.close}>\r\n              CLOSE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n    //   </Container>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default ModalUpdate;\r\n","import React, { useState } from \"react\";\r\nimport \"./PopUp.css\";\r\nimport { Container, Paper } from \"@material-ui/core/\";\r\nimport ModalDelete from \"./ModalDelete\";\r\nimport ModalUpdate from \"./ModalUpdate\";\r\nfunction PopUp(props) {\r\n  const [modal, setModal] = useState(true);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n      }}\r\n    >\r\n      <div className=\"PopUp_container\">\r\n        <div className=\"PopUp_container_box\">\r\n          {modal ? (\r\n            <Paper className=\"box\">\r\n              <div className=\"btn\" onClick={() => setModal(false)}>\r\n                UPDATE RECORD\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => setModal(true)}\r\n                style={{ backgroundColor: \"#3F51B5\", color: \"white\" }}\r\n              >\r\n                DELETE RECORD\r\n              </div>\r\n            </Paper>\r\n          ) : (\r\n            <Paper className=\"box\">\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => setModal(false)}\r\n                style={{ backgroundColor: \"#3F51B5\", color: \"white\" }}\r\n              >\r\n                UPDATE RECORD\r\n              </div>\r\n              <div className=\"btn\" onClick={() => setModal(true)}>\r\n                DELETE RECORD\r\n              </div>\r\n            </Paper>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Container\r\n        fixed\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          width: \"50%\",\r\n          height: \"auto\",\r\n        }}\r\n      >\r\n        {modal ? (\r\n          <ModalDelete\r\n            close={props.close}\r\n            fetchData={props.dataReload}\r\n            loader={props.loader}\r\n          />\r\n        ) : (\r\n          <ModalUpdate\r\n            close={props.close}\r\n            fetchData={props.dataReload}\r\n            loader={props.loader}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopUp;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Container, TableFooter, TablePagination } from \"@material-ui/core\";\r\nimport \"./ViewData.css\";\r\nimport PopUp from \"../popUp/PopUp\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction ViewData(props) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [popUp, setPopUp] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [columns, setColumns] = useState([]);\r\n  const [toSearch, setToSearch] = useState(\"\");\r\n  const refresh = () => {\r\n    setLoading(true);\r\n    fetchData();\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get(\r\n      \"http://34.122.82.176:3000/get/recordData\"\r\n    );\r\n    setData(response);\r\n    setLoading(false);\r\n    console.log(data.length);\r\n    // alert(\"clicked\");\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  console.log(data.data);\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  console.log(toSearch);\r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"ValidationBDSHOP\";\r\n    const headers = [\r\n      [\"TIME\", \"RECORDED BY\", \"ORDER NUMBER\", \"TRANSACTION ID\", \"AMOUNT\"],\r\n    ];\r\n\r\n    const dataTable = data.data.map((elt) => [\r\n      new Date(elt.TimeStamp).toDateString(),\r\n      elt.username,\r\n      elt.ord_number,\r\n      elt.trans_id,\r\n      elt.Amount,\r\n    ]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: dataTable,\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button\r\n          onClick={refresh}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n        <Button\r\n          onClick={() => setPopUp(!popUp)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Record Update/Delete\r\n        </Button>\r\n      </Container>\r\n      <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {loading ? (\r\n          <CircularProgress disableShrink />\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              <CSVLink\r\n                data={data.data}\r\n                style={{ color: \"white\", textDecoration: \"none\" }}\r\n              >\r\n                DOWNLOAD CSV\r\n              </CSVLink>\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={exportPDF}\r\n            >\r\n              DOWNLOAD PDF\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              <ReactHTMLTableToExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"download-table-xls-button\"\r\n                table=\"table-to-xls\"\r\n                filename=\"tablexls\"\r\n                sheet=\"tablexls\"\r\n                buttonText=\"DOWNLOAD XLS\"\r\n              />\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              COPY TO CLIPBOARD\r\n            </Button>\r\n            <TextField\r\n              style={{ marginBottom: \"0.8rem\" }}\r\n              id=\"standard\"\r\n              label=\"Search\"\r\n              width=\"60%\"\r\n              onChange={(e) => setToSearch(e.target.value)}\r\n              autoComplete=\"off\"\r\n            />\r\n\r\n            <Table\r\n              className={classes.table}\r\n              aria-label=\"simple table\"\r\n              id=\"table-to-xls\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">Time</TableCell>\r\n                  <TableCell align=\"left\">Recorded By</TableCell>\r\n                  <TableCell align=\"left\">Order Number</TableCell>\r\n                  <TableCell align=\"left\">Transaction ID</TableCell>\r\n                  <TableCell align=\"left\">Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.data\r\n                  .filter((datas) => {\r\n                    if (toSearch == null) return datas;\r\n                    else if (\r\n                      datas.username\r\n                        .toLowerCase()\r\n                        .includes(toSearch.toLowerCase()) ||\r\n                      datas.ord_number.toString().includes(toSearch) ||\r\n                      datas.trans_id\r\n                        .toLowerCase()\r\n                        .includes(toSearch.toLowerCase())\r\n                    ) {\r\n                      return datas;\r\n                    }\r\n                  })\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => (\r\n                    <TableRow key={row.trans_id}>\r\n                      <TableCell align=\"left\">\r\n                        {new Date(row.TimeStamp).toDateString()}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.username}</TableCell>\r\n                      <TableCell align=\"left\">{row.ord_number}</TableCell>\r\n                      <TableCell align=\"left\">{row.trans_id}</TableCell>\r\n                      <TableCell align=\"left\">{row.Amount}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  colSpan={3}\r\n                  count={data.data.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </TableContainer>\r\n        )}\r\n      </Container>\r\n\r\n      {popUp ? null : (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            backgroundColor: \"rgba(0,0,0,0.8)\",\r\n            width: \"100%\",\r\n            top: \"0\",\r\n            height: \"100vh\",\r\n            overflow: \"hidden\",\r\n            margin: \"auto\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          <PopUp\r\n            close={() => setPopUp(!popUp)}\r\n            dataReload={fetchData}\r\n            loader={refresh}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewData;\r\n","import React from \"react\";\r\nimport ViewData from \"../../components/viewData/ViewData\";\r\n\r\nfunction View() {\r\n  return (\r\n    <div>\r\n      <ViewData />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React, { useCallback, useState, useContext, createContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  Container,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core/\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Event } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AlertPop from \"../../components/alert/AlertPop\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Home(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [resp, setResp] = useState(\"\");\r\n  const [values, setValues] = useState({ showPassword: false });\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    // alert(`Submitting : ${userName},${password}`);\r\n    // setUserName(\"\");\r\n    // setPassword(\"\");\r\n    const response = await axios.post(\"http://34.122.82.176:3000/login\", {\r\n      username: userName,\r\n      password: password,\r\n    });\r\n    setResp(response.data);\r\n    console.log(response.data);\r\n  };\r\n  const alertMessage = () => {\r\n    if (resp === \"Access not granted\") {\r\n      return false;\r\n    } else if (resp.msg === \"Access Granted\") {\r\n      auth.login();\r\n      return true;\r\n    }\r\n  };\r\n  console.log(\"from context \" + props.userIs);\r\n\r\n  const SubmitButton = () => {\r\n    if (userName.trim() && password.trim()) {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n            auth.setUserIs(userName);\r\n          }}\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled\r\n          onClick={handleSubmit}\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <Container\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"70vh\",\r\n      }}\r\n    >\r\n      <Grid style={{ width: \"50%\" }}>\r\n        <Paper elevation={3}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              background: \"#3f51b5\",\r\n              color: \"white\",\r\n              padding: \"0.6rem\",\r\n            }}\r\n          >\r\n            LOGIN\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              padding: \"1rem\",\r\n            }}\r\n          >\r\n            <TextField\r\n              style={{ marginBottom: \"0.8rem\" }}\r\n              id=\"standard\"\r\n              label=\"Username\"\r\n              fullWidth=\"True\"\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n              }}\r\n              autoComplete=\"off\"\r\n              value={userName}\r\n            />\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <InputLabel htmlFor=\"standard-adornment-password\">\r\n                Password\r\n              </InputLabel>\r\n              <Input\r\n                id=\"standard-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={\r\n                  (handleChange(\"password\"), (e) => setPassword(e.target.value))\r\n                }\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <AlertPop\r\n              pop={alertMessage()}\r\n              success=\"Access Granted.\"\r\n              failure=\"Access Denied.\"\r\n            />\r\n            <SubmitButton />\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nfunction Navigation(props) {\r\n  const auth = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ flexDirection: \"row\", padding: \"1.2rem\" }}\r\n      >\r\n        {auth.isLoggedIn && (\r\n          <div\r\n            style={{\r\n              width: \"60%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            <NavLink\r\n              exact\r\n              to=\"/add\"\r\n              className={classes.link}\r\n              style={{ marginRight: \"1.2rem\", padding: \"0.4rem 0.6rem\" }}\r\n              activeClassName=\"nav-active\"\r\n            >\r\n              ADD RECORD\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              exact\r\n              // to=\"/view\"\r\n              to=\"/\"\r\n              className={classes.link}\r\n              style={{ marginRight: \"1.2rem\", padding: \"0.4rem 0.6rem\" }}\r\n              activeClassName=\"nav-active\"\r\n            >\r\n              VIEW DATA\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              exact\r\n              to=\"/create\"\r\n              className={classes.link}\r\n              style={{ marginRight: \"1.2rem\", padding: \"0.4rem 0.6rem\" }}\r\n              activeClassName=\"nav-active\"\r\n            >\r\n              CREATE USER\r\n            </NavLink>\r\n            {/* </Typography> */}\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{ marginLeft: \"auto\", display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={auth.logout}>\r\n            <NavLink\r\n              exact\r\n              to=\"/\"\r\n              style={{ color: \"white\", textDecoration: \"none\" }}\r\n            >\r\n              LOG OUT\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { useCallback, useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Add from \"./pages/add/Add\";\r\nimport Create from \"./pages/create/Create\";\r\nimport View from \"./pages/view/View\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Navigation from \"./components/navigation/Navigation\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nfunction App() {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoggedIn, SetIsLoggedIn] = useState(auth.isLoggedIn);\r\n  const [userIs, setUserIs] = useState(auth.userIs);\r\n  console.log(isLoggedIn);\r\n  const login = useCallback(() => {\r\n    SetIsLoggedIn(true);\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    SetIsLoggedIn(false);\r\n  }, []);\r\n\r\n  let routes;\r\n\r\n  if (isLoggedIn) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          {/* <Home /> */}\r\n          <View />\r\n        </Route>\r\n        <Route path=\"/add\" exact>\r\n          <Add />\r\n        </Route>\r\n        {/* <Route path=\"/view\" exact>\r\n          <View />\r\n        </Route> */}\r\n        <Route path=\"/create\" exact>\r\n          <Create />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/add\" exact>\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route path=\"/view\" exact>\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        login: login,\r\n        logout: logout,\r\n        userIs: userIs,\r\n        setUserIs: setUserIs,\r\n      }}\r\n    >\r\n      <Router basename=\"/\">\r\n        <Navigation />\r\n        {/* <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/add\" exact>\r\n          <Add />\r\n        </Route>\r\n        <Route path=\"/view\" exact>\r\n          <View />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <Create />\r\n        </Route>\r\n      </Switch> */}\r\n        {routes}\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}